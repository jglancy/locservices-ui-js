define(["jquery","locservices/core/geolocation","locservices/core/recent_locations","locservices/core/cookies","locservices/core/bbc_cookies","locservices/core/preferred_location"],function(a,b,c,d,e,f){"use strict";function g(a,b,c){a.userActionEvent(b,"locservicesui",c||{})}function h(a,b){if(b=b||{},b.namespace=b.namespace||"locservices:ui",i||(g(a,"locservices_user",k),i=!0),!a||"object"!=typeof a)throw new Error("The stats module requires an instance of an EchoClient");this._echoClient=a,this._registeredNamespaces={},this.registerNamespace(b.namespace)}var i=!1,j=new c,k={capability_geolocation:b.isSupported,capability_recent_locations:j.isSupported(),capability_local_storage:"object"==typeof window.localStorage&&window.localStorage.getItem,capability_cookies_enabled:(new d).isSupported(),capability_bbccookies_preference_enabled:(new e).isPersonalisationDisabled(),has_locserv_cookie:(new f).isSet(),has_recent_locations:j.isSupported()&&j.all().length>0,recent_locations_total:j.isSupported()?j.all().length:0};return h.prototype.registerNamespace=function(b){var c=this._echoClient;return this._registeredNamespaces[b]===!0?!1:(a.on(b+":component:geolocation:location",function(a){g(c,"geolocation_location",{locationId:a.id})}),a.on(b+":error",function(a){"geolocation.error.browser.permission"===a.code&&g(c,"geolocation_denied")}),a.on(b+":component:geolocation:click",function(){g(c,"geolocation_click")}),a.on(b+":component:auto_complete:location",function(a,b){g(c,"auto_complete_location",{locationId:a.id,searchTerm:b,searchTermLength:b.length})}),a.on(b+":component:user_locations:location",function(a){var b="user_locations_location_select";a.isPreferred===!0&&(b="user_locations_location_main_select"),g(c,b,{locationId:a.id})}),a.on(b+":component:user_locations:location_prefer",function(a){g(c,"user_locations_location_prefer",{locationId:a})}),a.on(b+":component:user_locations:location_remove",function(a){g(c,"user_locations_location_remove",{locationId:a})}),a.on(b+":component:user_locations:location_add",function(a){g(c,"user_locations_location_add",{locationId:a.id})}),a.on(b+":component:search_results:results",function(a){0===a.totalResults&&g(c,"search_no_results")}),a.on(b+":component:search_results:location",function(a,b){g(c,"search_results_location",{locationId:a,offset:b})}),this._registeredNamespaces[b]=!0,!0)},h});